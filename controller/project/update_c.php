<?phprequire_once("../../global.php");$slug = Filter::text($_GET['slug']);$project = Project::getProjectFromSlug($slug);// kick us out if slug invalidif($project == null) {	header('Location: '.Url::error());	exit();}// validate task$taskID = Filter::numeric($_GET['t']);$task = Task::load($taskID);if($task == null) {	header('Location: '.Url::error());	exit();}// validate update$updateID = Filter::numeric($_GET['u']);$update = Update::load($updateID);if($update == null) {	header('Location: '.Url::error());	exit();}// get other updates$updates = Update::getByAcceptedID($update->getAcceptedID());// get update comments$comments = Comment::getByUpdateID($update->getID());// get events$events = Event::getUpdateEvents($update->getID(), 5);// $username = Filter::text($_GET['u']);// $user = User::loadByUsername($username);// check if user has accepted task$accepted = Accepted::load($update->getAcceptedID());// if($accepted == null) {	// header('Location: '.Url::error());	// exit();// }// $updates = Update::getByAcceptedID($accepted->getID());// $events = Event::getUpdatesEvents($accepted->getID(), 10);//$updates = Update::getByUserID($user->getID(), $taskID);$soup = new Soup();$soup->set('project', $project);$soup->set('task', $task);$soup->set('updates', $updates);$soup->set('update', $update);//$soup->set('user', $user);$soup->set('accepted', $accepted);$soup->set('events', $events);$soup->set('comments', $comments);$soup->render('project/page/update');