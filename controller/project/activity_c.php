<?phprequire_once("../../global.php");$slug = Filter::text($_GET['slug']);$filter = Filter::text($_GET['filter']);$page = Filter::numeric($_GET['page']);$project = Project::getProjectFromSlug($slug);// kick us out if slug invalidif($project == null){	header('Location: '.Url::error());	exit();}$projectID = $project->getID();//$discussions = Discussion::getActivityDiscussionsByProjectID($project->getID(), 5);define('EVENTS_PER_PAGE', 10); // how many events per pageif(empty($page)) $page=1; // deal with no page number// figure out which events to get$limit = ($page-1)*EVENTS_PER_PAGE.', '.EVENTS_PER_PAGE;switch($filter){	case "basics":		$totalNumEvents = count(Event::getBasicsEventsByProjectID($projectID));		$events = Event::getBasicsEventsByProjectID($projectID, $limit);		//$sparklineData = Event::getSparklineData($projectID, BASICS_ID);		break;	case "tasks":		$totalNumEvents = count(Event::getTasksEventsByProjectID($projectID));		$events = Event::getTasksEventsByProjectID($projectID, $limit);		//$sparklineData = Event::getSparklineData($projectID, TASKS_ID);		break;	case "discussions":		$totalNumEvents = count(Event::getDiscussionsEventsByProjectID($projectID));		$events = Event::getDiscussionsEventsByProjectID($projectID, $limit);		//$sparklineData = Event::getSparklineData($projectID, DISCUSSIONS_ID);		break;	case "people":		$totalNumEvents = count(Event::getPeopleEventsByProjectID($projectID));		$events = Event::getPeopleEventsByProjectID($projectID, $limit);		//$sparklineData = Event::getSparklineData($projectID, PEOPLE_ID);		break;	case "all":	default:		$totalNumEvents = count(Event::getByProjectID($projectID));		$events = Event::getByProjectID($projectID, null, $limit);		//$sparklineData = Event::getSparklineData($projectID);		break;}$numPages = ceil($totalNumEvents/EVENTS_PER_PAGE);//echo $numPages;$soup = new Soup();$soup->set('project', $project);$soup->set('filter', $filter);$soup->set('events', $events);//$soup->set('sparklineData', $sparklineData);$soup->set('page', $page);$soup->set('numPages', $numPages);//$soup->set('discussions', $discussions);$soup->render('project/page/activity');